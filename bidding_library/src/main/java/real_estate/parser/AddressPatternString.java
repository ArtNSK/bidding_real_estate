package real_estate.parser;

import lombok.Getter;
import lombok.RequiredArgsConstructor;
import util.Pair;

/**
 * Enum содержмит строковые шаблоны регулярных выражений для паттернов {@link java.util.regex.Pattern}
 * @author Shestakov Artem
 * */
@RequiredArgsConstructor
@Getter
public enum AddressPatternString {
    CITY(new Pair<>("(г\\.?|город|гор\\.?|гор|пос[е|ё]лок[\\.]*|п[\\.]*г[\\.]*т[\\.]*|р[\\.]*п[\\.]*|п\\.*|пос[е|ё]лок городского типа|деревня|д\\.*|сел[о]*|с\\.*|х\\.*)", "(,\\s*%s\\.?\\s*([а-яА-Яa-zA-Z \\-_]+)\\s*,)|(,\\s*([а-яА-Яa-zA-Z \\-_]+)\\s*%s\\s*,)")),
    DISTRICT(new Pair<>("(район|р-н\\.?|р\\.?)","(,\\s*%s\\s+([а-яА-Яa-zA-Z \\-_]+)\\s*,)|(,\\s*([а-яА-Яa-zA-Z \\-_]+)\\s*%s\\s*,)")),
    STREET(new Pair<>("(улица|ул\\.?|проспект|пр-кт|пр-т|проезд|пр\\.?|шоссе|ш\\.?|переулок|пер\\.?|аллея|ал\\.?|бульвар|б-р|площадь|пл\\.?|проулок|тракт|тупик|туп\\.?|сад|строение|стр\\.?)","(,\\s*%s\\s+([а-яА-Яa-zA-Z0-9 \\.\\-_]+)\\s*,)|(,\\s*([а-яА-Яa-zA-Z0-9 \\.\\-_]+)\\s+%s\\s*,)")),
    BUILDING(new Pair<>("(дом|д\\.?)","(,\\s*%s\\s*([0-9\\-_\\/]+[а-яА-Яa-zA-Z ]*)\\s*\\.?($|,))|(,\\s*([0-9 \\.\\-_\\/]+[а-яА-Яa-zA-Z]*)\\s+%s\\s*,)")),
    APARTMENT(new Pair<>("(квартира|кв\\.?|к\\.?|помещение|пом\\.?)", "(,\\s*%s\\s*([0-9\\-_\\/]+[а-я ]*)\\s*($|,|\\.))|(,\\s*([0-9 \\.\\-_\\/]+)\\s+%s\\s*,)")),
    ROOM(new Pair<>("(комната|комн\\.?|ком\\.?)","(,\\s*%s\\s*([0-9\\-_\\/]+[а-я ]*)\\s*($|,|\\.))|(,\\s*([0-9 \\.\\-_\\/]+)\\s+%s\\s*,)")),
    HOUSING(new Pair<>("(корпус|корп\\.?|кор\\.?|к-с\\.?|к-ус\\.?)", "(,\\s*%s\\s*([0-9\\-_\\/]+[а-яА-Яa-zA-Z ]*)\\s*\\.?($|,))|(,\\s*([0-9 \\.\\-_\\/]+[а-яА-Яa-zA-Z]*)\\s+%s\\s*,)")),
    MICRODISTRICT(new Pair<>("(микрорайон|мкр-н\\.?|мкр\\.?)", "(,\\s*%s\\s*([а-яА-Яa-zA-Z0-9 \\.\\-_]+)\\s*\\.?($|,))|(,\\s*([а-яА-Яa-zA-Z0-9 \\.\\-_]+)\\s+%s\\s*,)"));

    private final Pair<String, String> element;
}
